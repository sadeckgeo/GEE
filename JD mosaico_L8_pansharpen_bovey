/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry2 = /* color: #0b4a8b */ee.Geometry.Polygon(
        [[[-55.51872421658783, -5.2263484483095315],
          [-55.54172667863287, -5.552432263579153],
          [-55.2773657201335, -5.510058699938882],
          [-55.27839615434027, -5.127190915263091]]]),
    geometry = /* color: #d63000 */ee.Geometry.Polygon(
        [[[-50.76458993117075, -3.8136494586944303],
          [-51.591313013015224, -3.120039793666509],
          [-51.81927965363923, -3.0953570202688936],
          [-52.1241506538276, -3.152949758453087],
          [-52.36035700222362, -3.262641137143135],
          [-53.29419626967035, -3.5203679816329996],
          [-54.47248202738649, -3.88216020878959],
          [-55.496959211712124, -4.1780569372337535],
          [-56.78510921925425, -4.566934719421746],
          [-55.759956710206495, -5.932697424939156],
          [-55.345900355263836, -7.647127763915977],
          [-54.895460838151905, -9.504707316393445],
          [-54.80757281564149, -13.369706754263268],
          [-52.1708380590963, -13.3590182738561],
          [-52.533389899930626, -10.521682576813527],
          [-51.204039397033, -8.832258458912243],
          [-50.59979016402025, -7.788656328356489],
          [-50.65472321536345, -6.709716699803895]]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// periodo de pesquisa,
var dataInicio='2016-07-01'
var dataFinal='2016-09-01'
// escolhe melhor cena (menos nuvens) no periodo
var col_L8=ee.ImageCollection('LANDSAT/LC08/C01/T1_RT_TOA').filterBounds(geometry).filterDate(dataInicio,dataFinal).sort('CLOUD_COVER',false)
print (col_L8)
var img=col_L8.mosaic()
print (img)
Map.addLayer(ee.Image(img),{bands: ['B4', 'B3', 'B2'], 
  min: 0, max: 0.25, gamma: [1.1, 1.1, 1]},
  'cena normal');
img=ee.Image(img)
//////////////////////////////
////Pansharpening convencional
// Convert the RGB bands to the HSV color space.
var hsv = img.select(['B4', 'B3', 'B2']).rgbToHsv();

// Swap in the panchromatic band and convert back to RGB.
var sharpened = ee.Image.cat([
  hsv.select('hue'), hsv.select('saturation'), img.select('B8')
]).hsvToRgb();

// Display the pan-sharpened result.
Map.addLayer(sharpened,
             {min: 0, max: 0.25, gamma: [1.3, 1.3, 1.3]},
             'pan-sharpened equal weights');
//Export.image.toDrive(sharpened.clip(geometry))

/////////////////
///Brovey SRFB Pansharpening
///ref: Computationally Inexpensive Landsat 8 Operational Land Imager (OLI) Pansharpening (Zhang & Roy, 2016)
var blue=img.select('B2')
var green=img.select('B3')
var red=img.select('B4')
var pan=img.select('B8')
var coef_red=ee.Image(0.4030)
var coef_green=ee.Image(0.5177)
var coef_blue=ee.Image(0.0802)
var I=ee.Image(blue.multiply(coef_blue).add(green.multiply(coef_green)).add(red.multiply(coef_red)))
var blue_pan=green.multiply(pan).divide(I).clamp(0,254)
var green_pan=green.multiply(pan).divide(I).clamp(0,254)
var red_pan=red.multiply(pan).divide(I).clamp(0,254)
var pan_rgb=ee.Image.rgb(red_pan,green_pan,blue_pan)
print (pan_rgb)

Export.image.toCloudStorage({
  bucket: 'geoxingu',
  image: pan_rgb.clip(geometry2),
  description: 'test_pansharp_rioz_bovey',
  maxPixels: 436036725959
});
var visParams={min: [0.0232,0.041,0.041], max: [0.1305,0.1445,0.1445],gamma:1.4}
Export.map.toCloudStorage({
  image: pan_rgb.visualize(visParams),
  description: 'mosaico_XINGUMAIS_L8SHARP/2017',
  bucket: 'obsxingu',
  region: geometry,
  minZoom:4,
  maxZoom:15,
  fileFormat: 'png'
})

//Export.image.toDrive(pan_rgb.clip(geometry))
Map.addLayer(pan_rgb.clip(geometry),
             visParams,
             'pan-sharpened Bovey');

