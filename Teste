/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #0b4a8b */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-84.20245355962992, 9.482068519101121],
          [-84.20245355962992, 9.47931183185032],
          [-84.19964260458231, 9.47931183185032],
          [-84.19964260458231, 9.482068519101121]]], null, false),
    geometry2 = 
    /* color: #ffc82d */
    /* shown: false */
    ee.Geometry.MultiPoint(
        [[-84.20191527836775, 9.4806193658618],
         [-84.20178183846926, 9.480569761350894],
         [-84.20058471500955, 9.480759179503657],
         [-84.20084173929331, 9.479471467402641],
         [-84.20103619568391, 9.47988451924967],
         [-84.20145673992263, 9.481592082239418],
         [-84.20004097690845, 9.480272833548577],
         [-84.20049374030326, 9.481599300482785],
         [-84.20038980470393, 9.481481572768153]]),
    smoothview = {"opacity":1,"bands":["b2"],"min":49.48888888888889,"max":130.52,"gamma":1},
    geometry3 = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.MultiPolygon(
        [[[[-84.20086569381878, 9.482015594228653],
           [-84.20079759717834, 9.48193887289434],
           [-84.20074328244579, 9.481881993273324],
           [-84.20069299102676, 9.48186016736974],
           [-84.20065141678703, 9.481850246504013],
           [-84.20061520696532, 9.48184164842015],
           [-84.20061520696532, 9.481799980779934],
           [-84.20065007568252, 9.4817642656557],
           [-84.20070707262408, 9.48174376252715],
           [-84.20073054195296, 9.481790059912464],
           [-84.20072920084846, 9.481723062451453],
           [-84.20069097937, 9.481658907489042],
           [-84.20061386586082, 9.48158152468337],
           [-84.20055955112826, 9.481513401344284],
           [-84.200466344365, 9.481421467884635],
           [-84.20037050240742, 9.48131836029381],
           [-84.20032356374966, 9.481265448923065],
           [-84.20028802448022, 9.481227749566424],
           [-84.20010831647622, 9.481037268543213],
           [-84.20004126125085, 9.480963192561187],
           [-84.19999594571273, 9.480908148974736],
           [-84.19996040644328, 9.480879047687047],
           [-84.19991547944228, 9.480840025501939],
           [-84.19988664569537, 9.480798357740058],
           [-84.19980148555915, 9.480710392448366],
           [-84.19966461936183, 9.48056175105463],
           [-84.19963243285365, 9.48147182736134],
           [-84.19990601817317, 9.482048560515286],
           [-84.20085810994588, 9.48203920713317]]],
         [[[-84.2013368694649, 9.48203847872054],
           [-84.20213622259863, 9.482040249982918],
           [-84.20244735884435, 9.481728073434423],
           [-84.20244735884435, 9.480942339677954],
           [-84.20245272326238, 9.479892539247144],
           [-84.20234543490179, 9.479717930967078],
           [-84.2022569220043, 9.479609462142294],
           [-84.20215768027074, 9.479495702118497],
           [-84.20202356982, 9.479366068557017],
           [-84.2018975059963, 9.4793131568852],
           [-84.20015407013662, 9.479323739220222],
           [-84.19982415842779, 9.479495702118497],
           [-84.19985902714498, 9.47955919608992],
           [-84.19968200135, 9.479641209118952],
           [-84.19968468355901, 9.479733804450758],
           [-84.19961494612463, 9.479778779317188],
           [-84.19966859030492, 9.480260274576644],
           [-84.20019073807256, 9.480814201684247],
           [-84.20095516764181, 9.481629036960754],
           [-84.20105172716634, 9.481726922886477],
           [-84.20109197846214, 9.48174323600178],
           [-84.20111678889553, 9.481738606262892],
           [-84.20113087049286, 9.481726701219767],
           [-84.20114294043343, 9.481718764524121],
           [-84.20114495209019, 9.481701568349592],
           [-84.20114964595597, 9.481673789911996],
           [-84.20120634713186, 9.481523284365226],
           [-84.20122780480398, 9.481463097716313],
           [-84.20124121584905, 9.481443255961603],
           [-84.20129754223836, 9.481410186367869],
           [-84.20130760052217, 9.481416138894986],
           [-84.20129687168611, 9.481441271786062],
           [-84.20127072014822, 9.481455822406378],
           [-84.20123920419229, 9.481476986943921],
           [-84.20119159498228, 9.481617201972108],
           [-84.20114119061016, 9.481804955168844],
           [-84.20117069490932, 9.481852575327983],
           [-84.20128634297178, 9.481995480118186]]]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
/*ReferÃªncia
Geospatial crop counting from drone orthophotos with Python, Scikit Learn and Scikit Image
https://tinyurl.com/y57tqrll
*/

var image = ee.Image("users/sadeckgeo/palmaOrthoTotal_14cm")

var kernel = ee.Kernel.square({
  radius: 7, units: 'pixels', normalize: true
});
var smooth = image.convolve(kernel);

var palm = smooth.select('b2').gt(140).and(smooth.select('b2').lt(174));

var vec = palm.select('b2').eq(1);
var masked = vec.updateMask(vec);
var fc = masked.reduceToVectors({scale: 0.14, geometry: geometry});

Map.addLayer(image,{},'RGB')
Map.addLayer(palm,{},'threshold')
Map.addLayer(smooth,smoothview,'smooth')
Map.addLayer(fc, {color: 'red'}, 'vectors');

Map.centerObject(image, 18)

Export.table.toDrive({
  collection:fc, 
  description:'vetor', 
  folder:'GEE', 
  fileFormat:'SHP'
  })