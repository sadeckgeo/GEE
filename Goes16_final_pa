/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #d63000 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-59.82710177322056, 3.070866852308672],
          [-59.82710177322056, -10.664375492926455],
          [-45.23725802322056, -10.664375492926455],
          [-45.23725802322056, 3.070866852308672]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var COLLECTION  = "NOAA/GOES/16/MCMIPF"
//var COLLECTION  = "NOAA/GOES/17/MCMIPF"

var START_TIME = '2021-07-04T05:00' 
var END_TIME = '2021-07-04T22:00'
var TIME_ZONE = 'UTC'

var maxPixel = 512
var frames_per_second = 10
var export_region = geometry
var projection = 'EPSG:3857'

var GOES_RGB_VIS = {
  min:0,
  max:0.3,
  gamma:1.3
}

//..........................sadeckgeo...........................

var BLUE = 'CMI_C01';
var RED = 'CMI_C02';
var VEGGIE = 'CMI_C03';
var GREEN = 'GREEN';

GOES_RGB_VIS['bands'] = [RED, GREEN, BLUE]

var states = ee.FeatureCollection("FAO/GAUL/2015/level1")
var statesOutline = ee.Image().byte()
    .paint({featureCollection: states, color: 1, width: 1})
    .visualize({palette: '000000', opacity: 0.6})

//---    
    
var applyScaleAndOffset = function(image){
  var names = image.select('CMI_C..').bandNames()
  
  var scales = names.map(function(names){
    return image.getNumber(ee.String(names).cat('_scale'))
  })
  var offsets = names.map(function(names){
    return image.getNumber(ee.String(names).cat('_offset'))
  })
  var scaled = image.select('CMI_C..')
      .multiply(ee.Image.constant(scales))
      .add(ee.Image.constant(offsets))
  return image.addBands({srcImg: scaled, overwrite: true})
};

//---

var addGreenBand = function(image){
  function toBandexperssion(bandName){return 'b(\'' + bandName + '\')' }
  
  var B_BLUE = toBandexperssion(BLUE)
  var B_RED = toBandexperssion(RED)
  var B_VEGGIE = toBandexperssion(VEGGIE)
  
  var GREEN_EXPR = GREEN + ' = 0.45 * ' + B_RED + ' + 0.10 * ' + B_VEGGIE + 
      ' + 0.45 * ' + B_BLUE
  
  var green = image.expression(GREEN_EXPR).select(GREEN)
  return image.addBands(green)
}

//---

var visualizeGoes = function(image){
  return image.visualize(GOES_RGB_VIS)
      .resample('bicubic')
      .blend(statesOutline)
      .set('system:time_start', image.get('system:time_start'))
}

//---

var start = ee.Date(START_TIME, TIME_ZONE)
var end = ee.Date(END_TIME, TIME_ZONE)
var col = ee.ImageCollection(COLLECTION)
    .filterDate(start, end)
    .map(applyScaleAndOffset)
    .map(addGreenBand)
    .map(visualizeGoes)
    
//---

var GIF_PARAMETERS = {
  dimensions: maxPixel,
  region: export_region,
  framesPerSecond: frames_per_second,
  crs: projection,
}
var gif_text = 'gif animado'
var gif_image = ui.Thumbnail(col, GIF_PARAMETERS)

print(gif_text, gif_image)

Export.video.toDrive({
  collection: col,
  description: 'GOES16_PA',
  folder: 'GEE',
  dimensions: maxPixel,
  region: export_region,
  crs: projection
})



//col = col.filterDate('2021-07-02T15:30', '2021-07-02T16:30')
//var image_layer = col.first()
//Map.addLayer(image_layer, {}, 'GOES16')
